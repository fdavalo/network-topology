apiVersion: apps/v1
kind: Deployment
metadata:
  name: watch-resources-pods
  labels:
    app: watch-resources-pods
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watch-resources-pods
  template:
    metadata:
      labels:
        app: watch-resources-pods
    spec:
      serviceAccountName: watch-all 
      containers:
      - name: pods
        image: quay.io/fdavalo/watch-resources:{{ .Values.tag.watch-resources}}
        ports:
        - containerPort: 8080
        args: ['sh', 'start.sh', 'pods', '/var/run/secrets/kubernetes.io/serviceaccount', '/run/ca', '/var/run/secrets/kubernetes.io/serviceaccount']
        volumeMounts:
        - name: ca
          mountPath: '/run/ca'
          readOnly: true
      volumes:
      - name: ca
        secret:
          secretName: ca
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: watch-resources-services
  labels:
    app: watch-resources-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: watch-resources-services
  template:
    metadata:
      labels:
        app: watch-resources-services
    spec:
      serviceAccountName: watch-all
      containers:
      - name: services
        image: quay.io/fdavalo/watch-resources:{{ .Values.tag.watch-resources}}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        args: ['sh', 'start.sh', 'services', '/var/run/secrets/kubernetes.io/serviceaccount', '/run/ca', '/var/run/secrets/kubernetes.io/serviceaccount']
        volumeMounts:
        - name: ca
          mountPath: '/run/ca'
          readOnly: true
      volumes:
      - name: ca 
        secret:
          secretName: ca
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: watch-flows
  namespace: {{ .Release.Namespace }}
  labels:
    app: watch-flows
spec:
  selector:
    matchLabels:
      app: watch-flows
  template:
    metadata:
      labels:
        app: watch-flows
    spec:
      hostNetwork: true
      hostPID: true
      serviceAccountName: watch-all
      containers:
      - name: flows 
        image: quay.io/fdavalo/watch-flows-int:{{ .Values.tag.watch-flows-int}}
        env:
        - name: WATCH_PODS_URL 
          value: watch-resources-pods.{{ .Values.wildcard }}
        - name: WATCH_SERVICES_URL
          value: watch-resources-services.{{ .Values.wildcard }}
        ports:
        - containerPort: 8080
        args: ['sh', 'start.sh']
        securityContext:
          privileged: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-topology-web 
  labels:
    app: net-topology-web 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: net-topology-web 
  template:
    metadata:
      labels:
        app: net-topology-web 
    spec:
      serviceAccountName: watch-all
      containers:
      - name: web 
        image: quay.io/fdavalo/net-topology-web:{{ .Values.tag.web}}
        ports:
        - containerPort: 8080
        args: ['sh', 'start.sh']
